services:
    mongo_db:
      container_name: image-mongodb-prod
      image: mongo
      hostname: mongo
      restart: always
      ports:
        - "27017:27017"
      volumes:
        - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        MONGO_USER: ${MONGO_USER}
        MONGO_USER_PWD: ${MONGO_USER_PWD}

    backend:
      container_name: image-back-prod
      build:
        context: ./backend/image
        dockerfile: ./Dockerfile
        args:
          - ENV=prod
      ports:
          - "8080:80"
      depends_on:
        - mongo_db
      volumes:
        - ./backend:/usr/src/app
        - ./certbot/www:/var/www/certbot # for letsencrypt certificates

    frontend:
      container_name: image-front-prod
      build:
        context: ./frontend
        dockerfile: ./Dockerfile
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./certbot/conf:/etc/letsencrypt # for certboot challenges
        - ./certbot/www:/var/www/certbot # for letsencrypt certificates
        - ./etc/ssl/certs:/etc/ssl/certs
      depends_on:
        - backend

    certbot:
      container_name: "certbot"
      image: certbot/certbot
      volumes:
        - ./certbot/conf:/etc/letsencrypt # for certboot challenges
        - ./certbot/www:/var/www/certbot # for letsencrypt certificates
      command: certonly --webroot -w /var/www/certbot -d ${DOMAIN} --dry-run --agree-tos --email ${EMAIL}
      depends_on:
        - frontend